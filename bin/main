#!/usr/bin/env ruby
# rubocop: disable Style/StringLiterals

class Board
  def initialize(board)
    @board = Array.new(9)
  end
  
  def win?
    @win = true if pos1 == pos2 && pos2 == pos3
    @win = true if pos1 == pos5 && pos5 == pos9
    @win = true if pos1 == pos4 && pos4 == pos7
    @win = true if pos2 == pos5 && pos5 == pos8
    @win = true if pos3 == pos5 && pos5 == pos7
    @win = true if pos3 == pos6 && pos6 == pos9
    @win = true if pos4 == pos5 && pos5 == pos6
    @win = true if pos7 == pos8 && pos8 == pos9
    
  end
end

class Player
  def initialize(name, token)
    @name = name
    @token = token
  end
end

class GamePlay
  def drawing_token(p1,p2,p3,p4,p5,p6,p7,p8,p9)
    puts " #{p1} | #{p2} | #{p3} "
    puts "-------------------- "
    puts " #{p4} | #{p5} | #{p6}  "
    puts "-------------------- "
    puts " #{p7} | #{p8} | #{p9} "
    puts " "
  end

  def get_actions(arg)
    if board[arg].empty?
      board.each_with_index do |token, arg|
        board[arg].push(token)
      end 
    else
      puts "This position is taken please choose another one"
    end
  end

  
end

# Welcome the player to the game
puts " Hello and welcome to Tic Tac Toe Game."
# Ask the first player for nikename
puts "First player enter your nickname: "
# save player one name
name_one = gets.chomp
player_one = Player.new(name_one, 'X')
# print out player one name
puts "First player name: #{name_one}, your token is 'X' "
# Ask the second player nickname
puts "Second player enter your nickname: "
# save player two nickname
name_two = gets.chomp
player_two = Player.new(name_two, 'O')
# print out player two name
puts "Second player name: #{name_two}, your token is 'O' "
# Game start
puts "Let's start"
puts " "
puts " p0 | p1 | p2 "
puts "-------------- "
puts " p3 | p4 | p5  "
puts "-------------- "
puts " p6 | p7 | p8 "
puts " "
puts "#{name_one} choose a position from: 0 to 8: "
choose = gets.chomp.to_i
puts "#{name_two} choose a number that is not taken: "
choose_two = gets.chomp.to_i

# rubocop: enable Style/StringLiterals
