#!/usr/bin/env ruby

# rubocop: disable Style/StringLiterals

# rubocop: disable Style/GuardClause

# rubocop:disable Lint/UnreachableCode

# rubocop: disable Style/ConditionalAssignment

# rubocop: disable Style/MultipleComparison

require_relative '../lib/board.rb'
require_relative '../lib/player.rb'

def get_choice(arg)
  loop do
    puts 'Please enter a number between 1 to 9: '
    choice = gets.chomp.to_i
    index = choice - 1
    if arg.include? choice
      return index
      break
    else
      puts 'Wrong position, please choose another one'
    end
  end
end

def valid_move(arr, player_choice, player)
  valid = false
  until valid
    if arr[player_choice] == 'X' || arr[player_choice] == 'O'
      puts 'Wrong postion, please choose another one'
      return valid
    else
      arr[player_choice] = player.token
      valid = true
      break
    end
  end
end

def self.reset
  options = %w[y n yes no]

  loop do
    puts 'Do you want to play again?: (y/n)'
    player_option = gets.chomp.downcase
    if options.include? player_option
      if player_option == 'yes' || player_option == 'y'
        check = true
      else
        check = false
      end
      return check
    else
      puts 'Sorry, wrong option please enter a valid option.'
    end
    check
  end
end

puts " Hello and welcome to Tic Tac Toe Game."
puts "First player enter your nickname: "
name_one = gets.chomp
player_one = Player.new(name_one, 'X')
puts "First player name: #{name_one}, your token is 'X' "
puts "Second player enter your nickname: "
name_two = gets.chomp
player_two = Player.new(name_two, 'O')
puts "Second player name: #{name_two}, your token is 'O' "

win_lose = false
until win_lose
  arr = [1, 2, 3, 4, 5, 6, 7, 8, 9]
  board = Board.new
  puts board.display_board(arr)
  current_player = player_one
  count = 1
  while count <= 9 && !win_lose
    player_choice = get_choice(arr)
    valid_move(arr, player_choice, current_player)
    new_board = Board.new
    puts new_board.display_board(arr)
    current = new_board.win?(arr)
    if current == true
      win_lose = true
      puts "\nCongratulations, #{current_player.name}. You win!"
      break
    end

    if current_player == player_one
      current_player = player_two
    elsif current_player == player_two
      current_player = player_one
    end
    count += 1
  end

  puts "You've both tied, #{name_one} and #{name_two}" if win_lose == false

  reset_game = reset

  if reset_game == true
    puts "Let us start"
    win_lose = false
  else
    break
  end
end

# rubocop: enable Style/StringLiterals

# rubocop: enable Style/GuardClause

# rubocop:enable Lint/UnreachableCode

# rubocop: enable Style/ConditionalAssignment

# rubocop: enable Style/MultipleComparison
